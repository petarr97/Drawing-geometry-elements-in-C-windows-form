<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button3.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAGXRF
        WHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAABDtJREFUeF7Vm8lu6zAMRb3u//9L91110WWR
        3+g8D344QhjIzJWoOsOTDkAgoCiZV2IsOXCmzWYzX1xczNM0VY2Ym5ubWfH19TW/v7/Pn5+fW0+Zn5+f
        FIv9/v5uvWU+Pj5SLP1auL6+btZze3s7Ty3BuXlI7unpaX59fd16yjBRxD4/P4fiaSeO+O/v7623jF1f
        5VyyrXbdWLKct7e3+f7+PiUagXhiHx8fm8QT9/Dw0CSe6zM2qJwDk86i9Y7KObClw+PbRzOPiFk6PL59
        NAPuD3d3d+mziFk6PL59NAPEczMFEbN0eHz7aOYRMXuOqvWOyjkw6SxaDbY6yo3tK4Ktjq0Lo18EJczY
        bL01VM5VO/QgZOTiW/Z5E9+yz7eKB5VzyZJ2jreqUdnV1dX2MkvWrvyxxcPl5aXMXRnH5r0l9UERPZQ9
        2FbnnxkiPQdNwNqyP5V4+niUHnKw4/vqCeil7GviQenhOcPYKbSLqQ6e3sq+JB4iPcnDIy0JJkfQYYSy
        z4n0TCTGILvvRKXDaOKhpgcmVp8BjVKHXHxEL+KhpMeY+MkpR3VYu/LnvuHl2MQrPTl7HtXBxEf0JJ5Y
        UHpymiZgpLLPqxWUHoOcmyZgpLI38Zaz0gO0c/9rmoAaPYrPUXrImV3v4AnIxfdS9rbyhtJDHOPy3LB6
        AkYQD0oPsVatO4UmQnXw5OJ7LPscpSfPOXkYyAZRHXJ6XPkakZ6J7wEXtCekWodRyj6npgfSUZg7og1U
        6jBS2eeU9BhpAvJZVB16XPmIaEGNKRcPqkNvK+9z9tiCgdKTs+dRHXoSH5FXKyg9OU0TMFLZm3jLWekx
        eBJumoCIc4hvLXtssc8X9JDHUZ4FehPvq1Xp4foYE3XQBPQuHpQeYu2HoJ1Cu5DqoOhNfOkmrfRQ+kby
        MFDLSdA4h/iIFvEQ6UkeToJ20ahDbyuvyj4n0pN+FCVBm8Vah97E11beqOmBdBTOByp1OIf4iL+Kh5Ie
        Iz0N5qgOvYmPyh7s+kpPzp5HdTi1+GOXvS0YKD05TRMwUtmbeMtZ6THIo2kCInoq+1w8lPTYS9gHT8A5
        yn6teFB6iCGet9sPmoDexYPSw7jkDqsnoOeyz1F67FUA2ClseT/AOMfKr7nhKSI9yYMgLpocQYcRyj4n
        0rPniTqsER9xKvEQ6ZnSy4IuqGS8hNjy353/Wfa8zKlyV5ZeEj3Wq7LG2pU/1Xe+Zgf/Z8jTQ9mrnAOT
        zqL1jso5sKXD49tHM4+IWTrAtjrw7aOZR8QsHYB42+p8+2jmETFLh8e3j2YeEbPnqFrvqJwDk86iAVtX
        /sp5CbY6tkSsZZ/neYSx89/tS7AdEps/2IDKuWprDkL+ogrEE8e9pEX8y8tLivWv7iqYIGK5WXtUziVL
        2vkLecskEMOxuQXEkyTG5wj7daZlojg0EVv6qz7H21Y9m81m/gcy0B9VVCBEKwAAAABJRU5ErkJggg==
</value>
  </data>
</root>